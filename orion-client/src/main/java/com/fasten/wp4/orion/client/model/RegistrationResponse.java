/*
 * ngsi-v2
 * NGSI V2 API RC-2018.04
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.orion.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasten.wp4.orion.client.model.DataProvided;
import com.fasten.wp4.orion.client.model.Provider;
import com.fasten.wp4.orion.client.model.RegistrationResponseForwardingInformation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;
import java.io.Serializable;

/**
 * RegistrationResponse
 */

public class RegistrationResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("id")
  private String id = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("provider")
  private Provider provider = null;

  @SerializedName("dataProvided")
  private DataProvided dataProvided = null;

  @SerializedName("expires")
  private Date expires = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("active"),
    
    INACTIVE("inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("forwardingInformation")
  private RegistrationResponseForwardingInformation forwardingInformation = null;

  public RegistrationResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RegistrationResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RegistrationResponse provider(Provider provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @ApiModelProperty(value = "")
  public Provider getProvider() {
    return provider;
  }

  public void setProvider(Provider provider) {
    this.provider = provider;
  }

  public RegistrationResponse dataProvided(DataProvided dataProvided) {
    this.dataProvided = dataProvided;
    return this;
  }

   /**
   * Get dataProvided
   * @return dataProvided
  **/
  @ApiModelProperty(value = "")
  public DataProvided getDataProvided() {
    return dataProvided;
  }

  public void setDataProvided(DataProvided dataProvided) {
    this.dataProvided = dataProvided;
  }

  public RegistrationResponse expires(Date expires) {
    this.expires = expires;
    return this;
  }

   /**
   * Get expires
   * @return expires
  **/
  @ApiModelProperty(value = "")
  public Date getExpires() {
    return expires;
  }

  public void setExpires(Date expires) {
    this.expires = expires;
  }

  public RegistrationResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public RegistrationResponse forwardingInformation(RegistrationResponseForwardingInformation forwardingInformation) {
    this.forwardingInformation = forwardingInformation;
    return this;
  }

   /**
   * Get forwardingInformation
   * @return forwardingInformation
  **/
  @ApiModelProperty(value = "")
  public RegistrationResponseForwardingInformation getForwardingInformation() {
    return forwardingInformation;
  }

  public void setForwardingInformation(RegistrationResponseForwardingInformation forwardingInformation) {
    this.forwardingInformation = forwardingInformation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegistrationResponse registrationResponse = (RegistrationResponse) o;
    return Objects.equals(this.id, registrationResponse.id) &&
        Objects.equals(this.description, registrationResponse.description) &&
        Objects.equals(this.provider, registrationResponse.provider) &&
        Objects.equals(this.dataProvided, registrationResponse.dataProvided) &&
        Objects.equals(this.expires, registrationResponse.expires) &&
        Objects.equals(this.status, registrationResponse.status) &&
        Objects.equals(this.forwardingInformation, registrationResponse.forwardingInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, provider, dataProvided, expires, status, forwardingInformation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegistrationResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    dataProvided: ").append(toIndentedString(dataProvided)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    forwardingInformation: ").append(toIndentedString(forwardingInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

