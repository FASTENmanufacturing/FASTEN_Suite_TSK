/*
 * Probability Distribution Generator
 * API Description
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.probabilitydistribution.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasten.wp4.probabilitydistribution.client.model.ProbabilityDistributionResultParameters;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * ProbabilityDistributionResult
 */

public class ProbabilityDistributionResult implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("bestFit")
  private List<String> bestFit = null;

  @SerializedName("parameters")
  private ProbabilityDistributionResultParameters parameters = null;

  @SerializedName("stdErros")
  private ProbabilityDistributionResultParameters stdErros = null;

  public ProbabilityDistributionResult bestFit(List<String> bestFit) {
    this.bestFit = bestFit;
    return this;
  }

  public ProbabilityDistributionResult addBestFitItem(String bestFitItem) {
    if (this.bestFit == null) {
      this.bestFit = new ArrayList<>();
    }
    this.bestFit.add(bestFitItem);
    return this;
  }

   /**
   * Get bestFit
   * @return bestFit
  **/
  @ApiModelProperty(value = "")
  public List<String> getBestFit() {
    return bestFit;
  }

  public void setBestFit(List<String> bestFit) {
    this.bestFit = bestFit;
  }

  public ProbabilityDistributionResult parameters(ProbabilityDistributionResultParameters parameters) {
    this.parameters = parameters;
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(value = "")
  public ProbabilityDistributionResultParameters getParameters() {
    return parameters;
  }

  public void setParameters(ProbabilityDistributionResultParameters parameters) {
    this.parameters = parameters;
  }

  public ProbabilityDistributionResult stdErros(ProbabilityDistributionResultParameters stdErros) {
    this.stdErros = stdErros;
    return this;
  }

   /**
   * Get stdErros
   * @return stdErros
  **/
  @ApiModelProperty(value = "")
  public ProbabilityDistributionResultParameters getStdErros() {
    return stdErros;
  }

  public void setStdErros(ProbabilityDistributionResultParameters stdErros) {
    this.stdErros = stdErros;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProbabilityDistributionResult probabilityDistributionResult = (ProbabilityDistributionResult) o;
    return Objects.equals(this.bestFit, probabilityDistributionResult.bestFit) &&
        Objects.equals(this.parameters, probabilityDistributionResult.parameters) &&
        Objects.equals(this.stdErros, probabilityDistributionResult.stdErros);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bestFit, parameters, stdErros);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProbabilityDistributionResult {\n");
    
    sb.append("    bestFit: ").append(toIndentedString(bestFit)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    stdErros: ").append(toIndentedString(stdErros)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

