/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.PageOfSRAMsAllocated;
import com.fasten.wp4.database.client.model.SRAMsAllocated;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AllocatedSramControllerApi
 */
@Ignore
public class AllocatedSramControllerApiTest {

    private final AllocatedSramControllerApi api = new AllocatedSramControllerApi();

    
    /**
     * Allocate a new SRAM in some Remote Station
     *
     * Also returns the url to created data in header location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSRAMsAllocatedTest() throws ApiException {
        SRAMsAllocated object = null;
        Object response = api.createSRAMsAllocated(object);

        // TODO: test validations
    }
    
    /**
     * Delete the SRAM allocated in the RS
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSRAMsAllocatedTest() throws ApiException {
        Long id = null;
        api.deleteSRAMsAllocated(id);

        // TODO: test validations
    }
    
    /**
     * List all SRAMs allocated
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllSRAMsAllocatedTest() throws ApiException {
        List<SRAMsAllocated> response = api.retrieveAllSRAMsAllocated();

        // TODO: test validations
    }
    
    /**
     * Find one configuration
     *
     * Also returns a link to retrieve all SRAMs allocated with rel - all
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMsAllocatedTest() throws ApiException {
        Long id = null;
        SRAMsAllocated response = api.retrieveSRAMsAllocated(id);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMsAllocatedFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfSRAMsAllocated response = api.retrieveSRAMsAllocatedFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMsAllocatedPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfSRAMsAllocated response = api.retrieveSRAMsAllocatedPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Edit the aumont of SRAMs allocated in a RS
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSRAMsAllocatedTest() throws ApiException {
        Long id = null;
        SRAMsAllocated object = null;
        Object response = api.updateSRAMsAllocated(id, object);

        // TODO: test validations
    }
    
}
