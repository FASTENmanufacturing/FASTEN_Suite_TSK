/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.City;
import com.fasten.wp4.database.client.model.PageOfCity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CityControllerApi
 */
@Ignore
public class CityControllerApiTest {

    private final CityControllerApi api = new CityControllerApi();

    
    /**
     * Save a city
     *
     * Also returns the url to created data in header location 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCityTest() throws ApiException {
        City city = null;
        Object response = api.createCity(city);

        // TODO: test validations
    }
    
    /**
     * Delete a city
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCityTest() throws ApiException {
        Long id = null;
        api.deleteCity(id);

        // TODO: test validations
    }
    
    /**
     * List all
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllCityTest() throws ApiException {
        List<City> response = api.retrieveAllCity();

        // TODO: test validations
    }
    
    /**
     * Find a city
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCityTest() throws ApiException {
        Long id = null;
        City response = api.retrieveCity(id);

        // TODO: test validations
    }
    
    /**
     * Find cities by name
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCityByNameTest() throws ApiException {
        String name = null;
        City response = api.retrieveCityByName(name);

        // TODO: test validations
    }
    
    /**
     * Find cities by name like
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCityByNameLikeTest() throws ApiException {
        String name = null;
        List<City> response = api.retrieveCityByNameLike(name);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCityFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfCity response = api.retrieveCityFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCityPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfCity response = api.retrieveCityPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Find cities by capital
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrivedByCapitalTest() throws ApiException {
        Boolean capital = null;
        List<City> response = api.retrivedByCapital(capital);

        // TODO: test validations
    }
    
    /**
     * Find cities by state
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrivedByStateTest() throws ApiException {
        Long id = null;
        List<City> response = api.retrivedByState(id);

        // TODO: test validations
    }
    
    /**
     * Find cities by state acronym
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrivedByStateAcronymTest() throws ApiException {
        String stateAcronym = null;
        List<City> response = api.retrivedByStateAcronym(stateAcronym);

        // TODO: test validations
    }
    
    /**
     * Update a city
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCityTest() throws ApiException {
        Long id = null;
        City object = null;
        Object response = api.updateCity(id, object);

        // TODO: test validations
    }
    
}
