/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.PageOfProduction;
import com.fasten.wp4.database.client.model.Production;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductionControllerApi
 */
@Ignore
public class ProductionControllerApiTest {

    private final ProductionControllerApi api = new ProductionControllerApi();

    
    /**
     * Create a new production configuration
     *
     * Also returns the url to created data in header location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createProductionTest() throws ApiException {
        Production production = null;
        Object response = api.createProduction(production);

        // TODO: test validations
    }
    
    /**
     * Delete the production condition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProductionTest() throws ApiException {
        Long id = null;
        api.deleteProduction(id);

        // TODO: test validations
    }
    
    /**
     * List all RS that has productions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllProductionTest() throws ApiException {
        List<Production> response = api.retrieveAllProduction();

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveProcessingPartFilteredAndPaged1Test() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfProduction response = api.retrieveProcessingPartFilteredAndPaged1(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveProcessingPartPaged1Test() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfProduction response = api.retrieveProcessingPartPaged1(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Find one RS that has production
     *
     * Also returns a link to retrieve all production with rel - all
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveProductionTest() throws ApiException {
        Long id = null;
        Production response = api.retrieveProduction(id);

        // TODO: test validations
    }
    
    /**
     * Edit the production of a supply
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProductionTest() throws ApiException {
        Long id = null;
        Production object = null;
        Object response = api.updateProduction(id, object);

        // TODO: test validations
    }
    
}
