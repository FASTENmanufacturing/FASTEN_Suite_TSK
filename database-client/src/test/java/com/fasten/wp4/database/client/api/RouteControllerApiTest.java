/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.PageOfRoute;
import com.fasten.wp4.database.client.model.Route;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RouteControllerApi
 */
@Ignore
public class RouteControllerApiTest {

    private final RouteControllerApi api = new RouteControllerApi();

    
    /**
     * Create a new route
     *
     * Also returns the url to created data in header location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRouteTest() throws ApiException {
        Route route = null;
        Object response = api.createRoute(route);

        // TODO: test validations
    }
    
    /**
     * Delete the route
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRouteTest() throws ApiException {
        Long id = null;
        api.deleteRoute(id);

        // TODO: test validations
    }
    
    /**
     * List all routes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllRouteTest() throws ApiException {
        List<Route> response = api.retrieveAllRoute();

        // TODO: test validations
    }
    
    /**
     * Find one route
     *
     * Also returns a link to retrieve all routes with rel - all
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveRouteTest() throws ApiException {
        Long id = null;
        Route response = api.retrieveRoute(id);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveRouteFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfRoute response = api.retrieveRouteFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveRoutePagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfRoute response = api.retrieveRoutePaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Edit the route
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRouteTest() throws ApiException {
        Long id = null;
        Route object = null;
        Object response = api.updateRoute(id, object);

        // TODO: test validations
    }
    
}
