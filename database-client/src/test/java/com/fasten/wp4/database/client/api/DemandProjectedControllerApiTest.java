/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.DemandProjected;
import com.fasten.wp4.database.client.model.PageOfDemandProjected;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DemandProjectedControllerApi
 */
@Ignore
public class DemandProjectedControllerApiTest {

    private final DemandProjectedControllerApi api = new DemandProjectedControllerApi();

    
    /**
     * Create a new demandProjected 
     *
     * Also returns the url to created data in header location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDemandProjectedTest() throws ApiException {
        DemandProjected demandProjected = null;
        Object response = api.createDemandProjected(demandProjected);

        // TODO: test validations
    }
    
    /**
     * Delete the demandProjected by demandProjectionStudy
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteByDemandProjectionStudyTest() throws ApiException {
        Long id = null;
        api.deleteByDemandProjectionStudy(id);

        // TODO: test validations
    }
    
    /**
     * Delete the demandProjected
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDemandProjectedTest() throws ApiException {
        Long id = null;
        api.deleteDemandProjected(id);

        // TODO: test validations
    }
    
    /**
     * List all demandProjected
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllDemandProjectedTest() throws ApiException {
        List<DemandProjected> response = api.retrieveAllDemandProjected();

        // TODO: test validations
    }
    
    /**
     * Find one demandProjected
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveDemandProjectedTest() throws ApiException {
        Long id = null;
        DemandProjected response = api.retrieveDemandProjected(id);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveDemandProjectedFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfDemandProjected response = api.retrieveDemandProjectedFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveDemandProjectedPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfDemandProjected response = api.retrieveDemandProjectedPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Edit demandProjected 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDemandProjectedTest() throws ApiException {
        Long id = null;
        DemandProjected object = null;
        Object response = api.updateDemandProjected(id, object);

        // TODO: test validations
    }
    
    /**
     * Batch update a list of demandProjecteds
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDemandProjectedsTest() throws ApiException {
        List<DemandProjected> list = null;
        Object response = api.updateDemandProjecteds(list);

        // TODO: test validations
    }
    
}
