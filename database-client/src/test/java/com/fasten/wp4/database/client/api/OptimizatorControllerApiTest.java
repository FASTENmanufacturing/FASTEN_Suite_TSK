/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.Optimizator;
import com.fasten.wp4.database.client.model.PageOfOptimizator;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OptimizatorControllerApi
 */
@Ignore
public class OptimizatorControllerApiTest {

    private final OptimizatorControllerApi api = new OptimizatorControllerApi();

    
    /**
     * Configura a optimization
     *
     * Also returns the url to created data in header location 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOptimizatorTest() throws ApiException {
        Optimizator optimizator = null;
        Object response = api.createOptimizator(optimizator);

        // TODO: test validations
    }
    
    /**
     * Delete the optimizator&#39;s configurations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOptimizatorTest() throws ApiException {
        Long id = null;
        api.deleteOptimizator(id);

        // TODO: test validations
    }
    
    /**
     * List all configured optimizations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllOptimizatorTest() throws ApiException {
        List<Optimizator> response = api.retrieveAllOptimizator();

        // TODO: test validations
    }
    
    /**
     * Find the optimizator configurations
     *
     * Also returns a link to retrieve all optimizator with rel - all
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveOptimizatorTest() throws ApiException {
        Long id = null;
        Optimizator response = api.retrieveOptimizator(id);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveOptimizatorFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfOptimizator response = api.retrieveOptimizatorFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveOptimizatorPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfOptimizator response = api.retrieveOptimizatorPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Update a optimization
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateOptimizatorTest() throws ApiException {
        Long id = null;
        Optimizator object = null;
        Object response = api.updateOptimizator(id, object);

        // TODO: test validations
    }
    
}
