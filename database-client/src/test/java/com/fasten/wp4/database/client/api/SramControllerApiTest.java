/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.PageOfSRAM;
import com.fasten.wp4.database.client.model.SRAM;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SramControllerApi
 */
@Ignore
public class SramControllerApiTest {

    private final SramControllerApi api = new SramControllerApi();

    
    /**
     * Register a SRAM
     *
     * Also returns the url to created data in header location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSRAMTest() throws ApiException {
        SRAM object = null;
        Object response = api.createSRAM(object);

        // TODO: test validations
    }
    
    /**
     * Delete the SRAM
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSRAMTest() throws ApiException {
        Long id = null;
        api.deleteSRAM(id);

        // TODO: test validations
    }
    
    /**
     * Find SRAMs name
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllDistinctByCodeTest() throws ApiException {
        List<String> response = api.retrieveAllDistinctByCode();

        // TODO: test validations
    }
    
    /**
     * List all SRAMs
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllSRAMTest() throws ApiException {
        List<SRAM> response = api.retrieveAllSRAM();

        // TODO: test validations
    }
    
    /**
     * Retrive one SRAM
     *
     * Also returns a link to retrieve all SRAM with rel - all
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMTest() throws ApiException {
        Long id = null;
        SRAM response = api.retrieveSRAM(id);

        // TODO: test validations
    }
    
    /**
     * Retrive one SRAM by code
     *
     * Also returns a link to retrieve all SRAM with rel - all
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMByCodeTest() throws ApiException {
        String code = null;
        SRAM response = api.retrieveSRAMByCode(code);

        // TODO: test validations
    }
    
    /**
     * Retrive SRAMs by code like
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMByCodeLikeTest() throws ApiException {
        String code = null;
        List<String> response = api.retrieveSRAMByCodeLike(code);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfSRAM response = api.retrieveSRAMFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSRAMPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfSRAM response = api.retrieveSRAMPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Update a SRAM
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSRAMTest() throws ApiException {
        Long id = null;
        SRAM object = null;
        Object response = api.updateSRAM(id, object);

        // TODO: test validations
    }
    
}
