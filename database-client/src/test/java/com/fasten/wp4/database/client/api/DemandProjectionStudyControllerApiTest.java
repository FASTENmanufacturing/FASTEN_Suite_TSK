/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.DemandProjectionStudy;
import com.fasten.wp4.database.client.model.PageOfDemandProjectionStudy;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DemandProjectionStudyControllerApi
 */
@Ignore
public class DemandProjectionStudyControllerApiTest {

    private final DemandProjectionStudyControllerApi api = new DemandProjectionStudyControllerApi();

    
    /**
     * Create a new demandProjectionStudy 
     *
     * Also returns the url to created data in header location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDemandProjectionStudyTest() throws ApiException {
        DemandProjectionStudy demandProjectionStudy = null;
        Object response = api.createDemandProjectionStudy(demandProjectionStudy);

        // TODO: test validations
    }
    
    /**
     * Delete the demandProjectionStudy
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDemandProjectionStudyTest() throws ApiException {
        Long id = null;
        api.deleteDemandProjectionStudy(id);

        // TODO: test validations
    }
    
    /**
     * Find boolean demandProjectionStudy by prediction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void existsByPredictionTest() throws ApiException {
        Long id = null;
        Boolean response = api.existsByPrediction(id);

        // TODO: test validations
    }
    
    /**
     * List all demandProjectionStudy
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllDemandProjectionStudyTest() throws ApiException {
        List<DemandProjectionStudy> response = api.retrieveAllDemandProjectionStudy();

        // TODO: test validations
    }
    
    /**
     * Find one demandProjectionStudy by prediction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveByStudyTest() throws ApiException {
        Long id = null;
        DemandProjectionStudy response = api.retrieveByStudy(id);

        // TODO: test validations
    }
    
    /**
     * Find one demandProjectionStudy
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveDemandProjectionStudyTest() throws ApiException {
        Long id = null;
        DemandProjectionStudy response = api.retrieveDemandProjectionStudy(id);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveDemandProjectionStudyFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfDemandProjectionStudy response = api.retrieveDemandProjectionStudyFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveDemandProjectionStudyPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfDemandProjectionStudy response = api.retrieveDemandProjectionStudyPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Edit demandProjectionStudy 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDemandProjectionStudyTest() throws ApiException {
        Long id = null;
        DemandProjectionStudy object = null;
        Object response = api.updateDemandProjectionStudy(id, object);

        // TODO: test validations
    }
    
}
