/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.PageOfState;
import com.fasten.wp4.database.client.model.State;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StateControllerApi
 */
@Ignore
public class StateControllerApiTest {

    private final StateControllerApi api = new StateControllerApi();

    
    /**
     * Save a state
     *
     * Also returns the url to created data in header location 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createStateTest() throws ApiException {
        State state = null;
        Object response = api.createState(state);

        // TODO: test validations
    }
    
    /**
     * Delete a state
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteStateTest() throws ApiException {
        Long id = null;
        api.deleteState(id);

        // TODO: test validations
    }
    
    /**
     * List all
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllStateTest() throws ApiException {
        List<State> response = api.retrieveAllState();

        // TODO: test validations
    }
    
    /**
     * Find a state
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveStateTest() throws ApiException {
        Long id = null;
        State response = api.retrieveState(id);

        // TODO: test validations
    }
    
    /**
     * Find states by name like
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveStateByNameLikeTest() throws ApiException {
        String name = null;
        List<State> response = api.retrieveStateByNameLike(name);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveStateFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfState response = api.retrieveStateFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveStatePagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfState response = api.retrieveStatePaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Update a state
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateStateTest() throws ApiException {
        Long id = null;
        State object = null;
        Object response = api.updateState(id, object);

        // TODO: test validations
    }
    
}
