/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.PageOfPrediction;
import com.fasten.wp4.database.client.model.Prediction;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PredictionControllerApi
 */
@Ignore
public class PredictionControllerApiTest {

    private final PredictionControllerApi api = new PredictionControllerApi();

    
    /**
     * Create
     *
     * Also returns the url to created data in header location 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPredictionTest() throws ApiException {
        Prediction prediction = null;
        Object response = api.createPrediction(prediction);

        // TODO: test validations
    }
    
    /**
     * Delete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePredictionTest() throws ApiException {
        Long id = null;
        api.deletePrediction(id);

        // TODO: test validations
    }
    
    /**
     * List all
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllPredictionTest() throws ApiException {
        List<Prediction> response = api.retrieveAllPrediction();

        // TODO: test validations
    }
    
    /**
     * Find the prediction configurations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrievePredictionTest() throws ApiException {
        Long id = null;
        Prediction response = api.retrievePrediction(id);

        // TODO: test validations
    }
    
    /**
     * List paged and filtered
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrievePredictionFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfPrediction response = api.retrievePredictionFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrievePredictionPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfPrediction response = api.retrievePredictionPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Update a optimization
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePredictionTest() throws ApiException {
        Long id = null;
        Prediction object = null;
        Object response = api.updatePrediction(id, object);

        // TODO: test validations
    }
    
}
