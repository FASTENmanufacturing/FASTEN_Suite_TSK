/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.api;

import com.fasten.wp4.database.client.invoker.ApiException;
import com.fasten.wp4.database.client.model.PageOfStock;
import com.fasten.wp4.database.client.model.Stock;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StockControllerApi
 */
@Ignore
public class StockControllerApiTest {

    private final StockControllerApi api = new StockControllerApi();

    
    /**
     * Create a new stock configuration
     *
     * Also returns the url to created data in header location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createStockTest() throws ApiException {
        Stock stock = null;
        Object response = api.createStock(stock);

        // TODO: test validations
    }
    
    /**
     * Delete the stock configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteStockTest() throws ApiException {
        Long id = null;
        api.deleteStock(id);

        // TODO: test validations
    }
    
    /**
     * List all stock&#39;s configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllStockTest() throws ApiException {
        List<Stock> response = api.retrieveAllStock();

        // TODO: test validations
    }
    
    /**
     * Find one stock configuration
     *
     * Also returns a link to retrieve all stock&#39;s configuration with rel - all
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveStockTest() throws ApiException {
        Long id = null;
        Stock response = api.retrieveStock(id);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveStockFilteredAndPagedTest() throws ApiException {
        String json = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfStock response = api.retrieveStockFilteredAndPaged(json, page, size, sort);

        // TODO: test validations
    }
    
    /**
     * List paged
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveStockPagedTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PageOfStock response = api.retrieveStockPaged(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * Edit the configured stock
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateStockTest() throws ApiException {
        Long id = null;
        Stock object = null;
        Object response = api.updateStock(id, object);

        // TODO: test validations
    }
    
}
