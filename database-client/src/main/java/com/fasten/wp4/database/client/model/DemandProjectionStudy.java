/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasten.wp4.database.client.model.DemandProjected;
import com.fasten.wp4.database.client.model.ErrorProjected;
import com.fasten.wp4.database.client.model.Prediction;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.io.Serializable;

/**
 * DemandProjectionStudy
 */

public class DemandProjectionStudy implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("demandProjecteds")
  private List<DemandProjected> demandProjecteds = null;

  @SerializedName("errors")
  private List<ErrorProjected> errors = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("previsionDate")
  private Date previsionDate = null;

  @SerializedName("previsionPeriodConsideredEnd")
  private Date previsionPeriodConsideredEnd = null;

  @SerializedName("previsionPeriodConsideredStart")
  private Date previsionPeriodConsideredStart = null;

  @SerializedName("processedDemandConsideredEnd")
  private Date processedDemandConsideredEnd = null;

  @SerializedName("processedDemandConsideredStart")
  private Date processedDemandConsideredStart = null;

  @SerializedName("realDemandConsideredEnd")
  private Date realDemandConsideredEnd = null;

  @SerializedName("realDemandConsideredStart")
  private Date realDemandConsideredStart = null;

  @SerializedName("study")
  private Prediction study = null;

  public DemandProjectionStudy demandProjecteds(List<DemandProjected> demandProjecteds) {
    this.demandProjecteds = demandProjecteds;
    return this;
  }

  public DemandProjectionStudy addDemandProjectedsItem(DemandProjected demandProjectedsItem) {
    if (this.demandProjecteds == null) {
      this.demandProjecteds = new ArrayList<>();
    }
    this.demandProjecteds.add(demandProjectedsItem);
    return this;
  }

   /**
   * Get demandProjecteds
   * @return demandProjecteds
  **/
  @ApiModelProperty(value = "")
  public List<DemandProjected> getDemandProjecteds() {
    return demandProjecteds;
  }

  public void setDemandProjecteds(List<DemandProjected> demandProjecteds) {
    this.demandProjecteds = demandProjecteds;
  }

  public DemandProjectionStudy errors(List<ErrorProjected> errors) {
    this.errors = errors;
    return this;
  }

  public DemandProjectionStudy addErrorsItem(ErrorProjected errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @ApiModelProperty(value = "")
  public List<ErrorProjected> getErrors() {
    return errors;
  }

  public void setErrors(List<ErrorProjected> errors) {
    this.errors = errors;
  }

  public DemandProjectionStudy id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DemandProjectionStudy previsionDate(Date previsionDate) {
    this.previsionDate = previsionDate;
    return this;
  }

   /**
   * Get previsionDate
   * @return previsionDate
  **/
  @ApiModelProperty(value = "")
  public Date getPrevisionDate() {
    return previsionDate;
  }

  public void setPrevisionDate(Date previsionDate) {
    this.previsionDate = previsionDate;
  }

  public DemandProjectionStudy previsionPeriodConsideredEnd(Date previsionPeriodConsideredEnd) {
    this.previsionPeriodConsideredEnd = previsionPeriodConsideredEnd;
    return this;
  }

   /**
   * Get previsionPeriodConsideredEnd
   * @return previsionPeriodConsideredEnd
  **/
  @ApiModelProperty(value = "")
  public Date getPrevisionPeriodConsideredEnd() {
    return previsionPeriodConsideredEnd;
  }

  public void setPrevisionPeriodConsideredEnd(Date previsionPeriodConsideredEnd) {
    this.previsionPeriodConsideredEnd = previsionPeriodConsideredEnd;
  }

  public DemandProjectionStudy previsionPeriodConsideredStart(Date previsionPeriodConsideredStart) {
    this.previsionPeriodConsideredStart = previsionPeriodConsideredStart;
    return this;
  }

   /**
   * Get previsionPeriodConsideredStart
   * @return previsionPeriodConsideredStart
  **/
  @ApiModelProperty(value = "")
  public Date getPrevisionPeriodConsideredStart() {
    return previsionPeriodConsideredStart;
  }

  public void setPrevisionPeriodConsideredStart(Date previsionPeriodConsideredStart) {
    this.previsionPeriodConsideredStart = previsionPeriodConsideredStart;
  }

  public DemandProjectionStudy processedDemandConsideredEnd(Date processedDemandConsideredEnd) {
    this.processedDemandConsideredEnd = processedDemandConsideredEnd;
    return this;
  }

   /**
   * Get processedDemandConsideredEnd
   * @return processedDemandConsideredEnd
  **/
  @ApiModelProperty(value = "")
  public Date getProcessedDemandConsideredEnd() {
    return processedDemandConsideredEnd;
  }

  public void setProcessedDemandConsideredEnd(Date processedDemandConsideredEnd) {
    this.processedDemandConsideredEnd = processedDemandConsideredEnd;
  }

  public DemandProjectionStudy processedDemandConsideredStart(Date processedDemandConsideredStart) {
    this.processedDemandConsideredStart = processedDemandConsideredStart;
    return this;
  }

   /**
   * Get processedDemandConsideredStart
   * @return processedDemandConsideredStart
  **/
  @ApiModelProperty(value = "")
  public Date getProcessedDemandConsideredStart() {
    return processedDemandConsideredStart;
  }

  public void setProcessedDemandConsideredStart(Date processedDemandConsideredStart) {
    this.processedDemandConsideredStart = processedDemandConsideredStart;
  }

  public DemandProjectionStudy realDemandConsideredEnd(Date realDemandConsideredEnd) {
    this.realDemandConsideredEnd = realDemandConsideredEnd;
    return this;
  }

   /**
   * Get realDemandConsideredEnd
   * @return realDemandConsideredEnd
  **/
  @ApiModelProperty(value = "")
  public Date getRealDemandConsideredEnd() {
    return realDemandConsideredEnd;
  }

  public void setRealDemandConsideredEnd(Date realDemandConsideredEnd) {
    this.realDemandConsideredEnd = realDemandConsideredEnd;
  }

  public DemandProjectionStudy realDemandConsideredStart(Date realDemandConsideredStart) {
    this.realDemandConsideredStart = realDemandConsideredStart;
    return this;
  }

   /**
   * Get realDemandConsideredStart
   * @return realDemandConsideredStart
  **/
  @ApiModelProperty(value = "")
  public Date getRealDemandConsideredStart() {
    return realDemandConsideredStart;
  }

  public void setRealDemandConsideredStart(Date realDemandConsideredStart) {
    this.realDemandConsideredStart = realDemandConsideredStart;
  }

  public DemandProjectionStudy study(Prediction study) {
    this.study = study;
    return this;
  }

   /**
   * Get study
   * @return study
  **/
  @ApiModelProperty(value = "")
  public Prediction getStudy() {
    return study;
  }

  public void setStudy(Prediction study) {
    this.study = study;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemandProjectionStudy demandProjectionStudy = (DemandProjectionStudy) o;
    return Objects.equals(this.demandProjecteds, demandProjectionStudy.demandProjecteds) &&
        Objects.equals(this.errors, demandProjectionStudy.errors) &&
        Objects.equals(this.id, demandProjectionStudy.id) &&
        Objects.equals(this.previsionDate, demandProjectionStudy.previsionDate) &&
        Objects.equals(this.previsionPeriodConsideredEnd, demandProjectionStudy.previsionPeriodConsideredEnd) &&
        Objects.equals(this.previsionPeriodConsideredStart, demandProjectionStudy.previsionPeriodConsideredStart) &&
        Objects.equals(this.processedDemandConsideredEnd, demandProjectionStudy.processedDemandConsideredEnd) &&
        Objects.equals(this.processedDemandConsideredStart, demandProjectionStudy.processedDemandConsideredStart) &&
        Objects.equals(this.realDemandConsideredEnd, demandProjectionStudy.realDemandConsideredEnd) &&
        Objects.equals(this.realDemandConsideredStart, demandProjectionStudy.realDemandConsideredStart) &&
        Objects.equals(this.study, demandProjectionStudy.study);
  }

  @Override
  public int hashCode() {
    return Objects.hash(demandProjecteds, errors, id, previsionDate, previsionPeriodConsideredEnd, previsionPeriodConsideredStart, processedDemandConsideredEnd, processedDemandConsideredStart, realDemandConsideredEnd, realDemandConsideredStart, study);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemandProjectionStudy {\n");
    
    sb.append("    demandProjecteds: ").append(toIndentedString(demandProjecteds)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    previsionDate: ").append(toIndentedString(previsionDate)).append("\n");
    sb.append("    previsionPeriodConsideredEnd: ").append(toIndentedString(previsionPeriodConsideredEnd)).append("\n");
    sb.append("    previsionPeriodConsideredStart: ").append(toIndentedString(previsionPeriodConsideredStart)).append("\n");
    sb.append("    processedDemandConsideredEnd: ").append(toIndentedString(processedDemandConsideredEnd)).append("\n");
    sb.append("    processedDemandConsideredStart: ").append(toIndentedString(processedDemandConsideredStart)).append("\n");
    sb.append("    realDemandConsideredEnd: ").append(toIndentedString(realDemandConsideredEnd)).append("\n");
    sb.append("    realDemandConsideredStart: ").append(toIndentedString(realDemandConsideredStart)).append("\n");
    sb.append("    study: ").append(toIndentedString(study)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

