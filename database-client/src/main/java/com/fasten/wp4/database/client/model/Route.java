/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasten.wp4.database.client.model.Part;
import com.fasten.wp4.database.client.model.RemoteStation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.io.Serializable;

/**
 * Result route output
 */
@ApiModel(description = "Result route output")

public class Route implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("cost")
  private BigDecimal cost = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("leadTime")
  private Double leadTime = null;

  @SerializedName("part")
  private Part part = null;

  @SerializedName("quantity")
  private Integer quantity = null;

  @SerializedName("remoteStationDestination")
  private RemoteStation remoteStationDestination = null;

  @SerializedName("remoteStationOrigin")
  private RemoteStation remoteStationOrigin = null;

  public Route cost(BigDecimal cost) {
    this.cost = cost;
    return this;
  }

   /**
   * The total cost
   * @return cost
  **/
  @ApiModelProperty(value = "The total cost")
  public BigDecimal getCost() {
    return cost;
  }

  public void setCost(BigDecimal cost) {
    this.cost = cost;
  }

  public Route id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Route leadTime(Double leadTime) {
    this.leadTime = leadTime;
    return this;
  }

   /**
   * The lead time (in hours) to a remote station produce and deliver the spare part
   * @return leadTime
  **/
  @ApiModelProperty(value = "The lead time (in hours) to a remote station produce and deliver the spare part")
  public Double getLeadTime() {
    return leadTime;
  }

  public void setLeadTime(Double leadTime) {
    this.leadTime = leadTime;
  }

  public Route part(Part part) {
    this.part = part;
    return this;
  }

   /**
   * The part
   * @return part
  **/
  @ApiModelProperty(value = "The part")
  public Part getPart() {
    return part;
  }

  public void setPart(Part part) {
    this.part = part;
  }

  public Route quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The quantitiy of parts
   * @return quantity
  **/
  @ApiModelProperty(value = "The quantitiy of parts")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public Route remoteStationDestination(RemoteStation remoteStationDestination) {
    this.remoteStationDestination = remoteStationDestination;
    return this;
  }

   /**
   * The remote station receiving the part
   * @return remoteStationDestination
  **/
  @ApiModelProperty(value = "The remote station receiving the part")
  public RemoteStation getRemoteStationDestination() {
    return remoteStationDestination;
  }

  public void setRemoteStationDestination(RemoteStation remoteStationDestination) {
    this.remoteStationDestination = remoteStationDestination;
  }

  public Route remoteStationOrigin(RemoteStation remoteStationOrigin) {
    this.remoteStationOrigin = remoteStationOrigin;
    return this;
  }

   /**
   * The remote station producing the part
   * @return remoteStationOrigin
  **/
  @ApiModelProperty(value = "The remote station producing the part")
  public RemoteStation getRemoteStationOrigin() {
    return remoteStationOrigin;
  }

  public void setRemoteStationOrigin(RemoteStation remoteStationOrigin) {
    this.remoteStationOrigin = remoteStationOrigin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Route route = (Route) o;
    return Objects.equals(this.cost, route.cost) &&
        Objects.equals(this.id, route.id) &&
        Objects.equals(this.leadTime, route.leadTime) &&
        Objects.equals(this.part, route.part) &&
        Objects.equals(this.quantity, route.quantity) &&
        Objects.equals(this.remoteStationDestination, route.remoteStationDestination) &&
        Objects.equals(this.remoteStationOrigin, route.remoteStationOrigin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, id, leadTime, part, quantity, remoteStationDestination, remoteStationOrigin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Route {\n");
    
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    leadTime: ").append(toIndentedString(leadTime)).append("\n");
    sb.append("    part: ").append(toIndentedString(part)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    remoteStationDestination: ").append(toIndentedString(remoteStationDestination)).append("\n");
    sb.append("    remoteStationOrigin: ").append(toIndentedString(remoteStationOrigin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

