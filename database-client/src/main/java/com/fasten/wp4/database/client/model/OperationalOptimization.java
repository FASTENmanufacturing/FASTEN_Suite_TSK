/*
 * Database OAS
 * Open API Specification REST for FASTEN Holistic Simulator-Optimizer Tool
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: Fasten-wp4@lists.inesctec.pt
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fasten.wp4.database.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasten.wp4.database.client.model.City;
import com.fasten.wp4.database.client.model.Part;
import com.fasten.wp4.database.client.model.State;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Operational optimization study
 */
@ApiModel(description = "Operational optimization study")

public class OperationalOptimization implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("city")
  private City city = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("part")
  private Part part = null;

  @SerializedName("quantity")
  private Integer quantity = null;

  @SerializedName("state")
  private State state = null;

  public OperationalOptimization city(City city) {
    this.city = city;
    return this;
  }

   /**
   * The city
   * @return city
  **/
  @ApiModelProperty(value = "The city")
  public City getCity() {
    return city;
  }

  public void setCity(City city) {
    this.city = city;
  }

  public OperationalOptimization id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OperationalOptimization part(Part part) {
    this.part = part;
    return this;
  }

   /**
   * The part
   * @return part
  **/
  @ApiModelProperty(value = "The part")
  public Part getPart() {
    return part;
  }

  public void setPart(Part part) {
    this.part = part;
  }

  public OperationalOptimization quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The quantitiy of parts
   * @return quantity
  **/
  @ApiModelProperty(value = "The quantitiy of parts")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public OperationalOptimization state(State state) {
    this.state = state;
    return this;
  }

   /**
   * The State
   * @return state
  **/
  @ApiModelProperty(value = "The State")
  public State getState() {
    return state;
  }

  public void setState(State state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OperationalOptimization operationalOptimization = (OperationalOptimization) o;
    return Objects.equals(this.city, operationalOptimization.city) &&
        Objects.equals(this.id, operationalOptimization.id) &&
        Objects.equals(this.part, operationalOptimization.part) &&
        Objects.equals(this.quantity, operationalOptimization.quantity) &&
        Objects.equals(this.state, operationalOptimization.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, id, part, quantity, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OperationalOptimization {\n");
    
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    part: ").append(toIndentedString(part)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

