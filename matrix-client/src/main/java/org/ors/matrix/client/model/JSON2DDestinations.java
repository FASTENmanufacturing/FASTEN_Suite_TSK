/*
 * OpenRouteService
 * This is the openrouteservice API V2 documentation for ORS Core-Version `5.0.0`. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor.swagger.io/).
 *
 * OpenAPI spec version: 5.0.0
 * Contact: info@openrouteservice.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ors.matrix.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * JSON2DDestinations
 */

public class JSON2DDestinations implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("location")
  private List<Double> location = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("snapped_distance")
  private Double snappedDistance = null;

  public JSON2DDestinations location(List<Double> location) {
    this.location = location;
    return this;
  }

  public JSON2DDestinations addLocationItem(Double locationItem) {
    if (this.location == null) {
      this.location = new ArrayList<>();
    }
    this.location.add(locationItem);
    return this;
  }

   /**
   * {longitude},{latitude} coordinates of the closest accessible point on the routing graph
   * @return location
  **/
  @ApiModelProperty(example = "[8.678962,49.40783]", value = "{longitude},{latitude} coordinates of the closest accessible point on the routing graph")
  public List<Double> getLocation() {
    return location;
  }

  public void setLocation(List<Double> location) {
    this.location = location;
  }

  public JSON2DDestinations name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the street the closest accessible point is situated on. Only for &#x60;resolve_locations&#x3D;true&#x60; and only if name is available.CUSTOM_KEYS:{&#39;validWhen&#39;:{&#39;ref&#39;:&#39;resolve_locations&#39;,&#39;value&#39;:true}}
   * @return name
  **/
  @ApiModelProperty(example = "Bergheimer Stra√üe", value = "Name of the street the closest accessible point is situated on. Only for `resolve_locations=true` and only if name is available.CUSTOM_KEYS:{'validWhen':{'ref':'resolve_locations','value':true}}")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public JSON2DDestinations snappedDistance(Double snappedDistance) {
    this.snappedDistance = snappedDistance;
    return this;
  }

   /**
   * Distance between the &#x60;source/destination&#x60; Location and the used point on the routing graph.
   * @return snappedDistance
  **/
  @ApiModelProperty(example = "1.2", value = "Distance between the `source/destination` Location and the used point on the routing graph.")
  public Double getSnappedDistance() {
    return snappedDistance;
  }

  public void setSnappedDistance(Double snappedDistance) {
    this.snappedDistance = snappedDistance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JSON2DDestinations jsON2DDestinations = (JSON2DDestinations) o;
    return Objects.equals(this.location, jsON2DDestinations.location) &&
        Objects.equals(this.name, jsON2DDestinations.name) &&
        Objects.equals(this.snappedDistance, jsON2DDestinations.snappedDistance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, name, snappedDistance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JSON2DDestinations {\n");
    
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    snappedDistance: ").append(toIndentedString(snappedDistance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

