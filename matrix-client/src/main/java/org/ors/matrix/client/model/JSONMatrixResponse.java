/*
 * OpenRouteService
 * This is the openrouteservice API V2 documentation for ORS Core-Version `5.0.0`. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor.swagger.io/).
 *
 * OpenAPI spec version: 5.0.0
 * Contact: info@openrouteservice.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ors.matrix.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.ors.matrix.client.model.JSON2DDestinations;
import org.ors.matrix.client.model.JSONMatrixResponseMetadata;
import java.io.Serializable;

/**
 * The Matrix Response contains one matrix for each specified &#x60;metrics&#x60; value.
 */
@ApiModel(description = "The Matrix Response contains one matrix for each specified `metrics` value.")

public class JSONMatrixResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("destinations")
  private List<JSON2DDestinations> destinations = null;

  @SerializedName("distances")
  private List<List<Double>> distances = null;

  @SerializedName("durations")
  private List<List<Double>> durations = null;

  @SerializedName("metadata")
  private JSONMatrixResponseMetadata metadata = null;

  @SerializedName("sources")
  private List<JSON2DDestinations> sources = null;

  public JSONMatrixResponse destinations(List<JSON2DDestinations> destinations) {
    this.destinations = destinations;
    return this;
  }

  public JSONMatrixResponse addDestinationsItem(JSON2DDestinations destinationsItem) {
    if (this.destinations == null) {
      this.destinations = new ArrayList<>();
    }
    this.destinations.add(destinationsItem);
    return this;
  }

   /**
   * The individual destinations of the matrix calculations.
   * @return destinations
  **/
  @ApiModelProperty(value = "The individual destinations of the matrix calculations.")
  public List<JSON2DDestinations> getDestinations() {
    return destinations;
  }

  public void setDestinations(List<JSON2DDestinations> destinations) {
    this.destinations = destinations;
  }

  public JSONMatrixResponse distances(List<List<Double>> distances) {
    this.distances = distances;
    return this;
  }

  public JSONMatrixResponse addDistancesItem(List<Double> distancesItem) {
    if (this.distances == null) {
      this.distances = new ArrayList<>();
    }
    this.distances.add(distancesItem);
    return this;
  }

   /**
   * The distances of the matrix calculations.
   * @return distances
  **/
  @ApiModelProperty(example = "[[0,0.25],[0.25,0]]", value = "The distances of the matrix calculations.")
  public List<List<Double>> getDistances() {
    return distances;
  }

  public void setDistances(List<List<Double>> distances) {
    this.distances = distances;
  }

  public JSONMatrixResponse durations(List<List<Double>> durations) {
    this.durations = durations;
    return this;
  }

  public JSONMatrixResponse addDurationsItem(List<Double> durationsItem) {
    if (this.durations == null) {
      this.durations = new ArrayList<>();
    }
    this.durations.add(durationsItem);
    return this;
  }

   /**
   * The durations of the matrix calculations.
   * @return durations
  **/
  @ApiModelProperty(example = "[[0,25],[25,0]]", value = "The durations of the matrix calculations.")
  public List<List<Double>> getDurations() {
    return durations;
  }

  public void setDurations(List<List<Double>> durations) {
    this.durations = durations;
  }

  public JSONMatrixResponse metadata(JSONMatrixResponseMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public JSONMatrixResponseMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(JSONMatrixResponseMetadata metadata) {
    this.metadata = metadata;
  }

  public JSONMatrixResponse sources(List<JSON2DDestinations> sources) {
    this.sources = sources;
    return this;
  }

  public JSONMatrixResponse addSourcesItem(JSON2DDestinations sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * The individual sources of the matrix calculations.
   * @return sources
  **/
  @ApiModelProperty(value = "The individual sources of the matrix calculations.")
  public List<JSON2DDestinations> getSources() {
    return sources;
  }

  public void setSources(List<JSON2DDestinations> sources) {
    this.sources = sources;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JSONMatrixResponse jsONMatrixResponse = (JSONMatrixResponse) o;
    return Objects.equals(this.destinations, jsONMatrixResponse.destinations) &&
        Objects.equals(this.distances, jsONMatrixResponse.distances) &&
        Objects.equals(this.durations, jsONMatrixResponse.durations) &&
        Objects.equals(this.metadata, jsONMatrixResponse.metadata) &&
        Objects.equals(this.sources, jsONMatrixResponse.sources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinations, distances, durations, metadata, sources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JSONMatrixResponse {\n");
    
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    distances: ").append(toIndentedString(distances)).append("\n");
    sb.append("    durations: ").append(toIndentedString(durations)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

