/*
 * OpenRouteService
 * This is the openrouteservice API V2 documentation for ORS Core-Version `5.0.0`. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor.swagger.io/).
 *
 * OpenAPI spec version: 5.0.0
 * Contact: info@openrouteservice.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ors.matrix.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * The JSON body request sent to the matrix service which defines options and parameters regarding the matrix to generate.
 */
@ApiModel(description = "The JSON body request sent to the matrix service which defines options and parameters regarding the matrix to generate.")

public class MatrixRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("destinations")
  private List<String> destinations = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("locations")
  private List<List<Double>> locations = new ArrayList<>();

  /**
   * Gets or Sets metrics
   */
  @JsonAdapter(MetricsEnum.Adapter.class)
  public enum MetricsEnum {
    DISTANCE("distance"),
    
    DURATION("duration");

    private String value;

    MetricsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MetricsEnum fromValue(String text) {
      for (MetricsEnum b : MetricsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MetricsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MetricsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MetricsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MetricsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("metrics")
  private List<MetricsEnum> metrics = null;

  @SerializedName("resolve_locations")
  private Boolean resolveLocations = null;

  @SerializedName("sources")
  private List<String> sources = null;

  /**
   * Specifies the distance unit. Default: m. CUSTOM_KEYS:{&#39;apiDefault&#39;:&#39;m&#39;,&#39;validWhen&#39;:{&#39;ref&#39;:&#39;metrics&#39;,&#39;value&#39;:&#39;distance&#39;}&#x60;}
   */
  @JsonAdapter(UnitsEnum.Adapter.class)
  public enum UnitsEnum {
    M("m"),
    
    KM("km"),
    
    MI("mi");

    private String value;

    UnitsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UnitsEnum fromValue(String text) {
      for (UnitsEnum b : UnitsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<UnitsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UnitsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UnitsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return UnitsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("units")
  private UnitsEnum units = null;

  public MatrixRequest destinations(List<String> destinations) {
    this.destinations = destinations;
    return this;
  }

  public MatrixRequest addDestinationsItem(String destinationsItem) {
    if (this.destinations == null) {
      this.destinations = new ArrayList<>();
    }
    this.destinations.add(destinationsItem);
    return this;
  }

   /**
   * A list of indices that refers to the list of locations (starting with &#x60;0&#x60;). &#x60;{index_1},{index_2}[,{index_N} ...]&#x60; or &#x60;all&#x60; (default). &#x60;[0,3]&#x60; for the first and fourth locations CUSTOM_KEYS:{&#39;apiDefault&#39;:[&#39;all&#39;]}
   * @return destinations
  **/
  @ApiModelProperty(value = "A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). `[0,3]` for the first and fourth locations CUSTOM_KEYS:{'apiDefault':['all']}")
  public List<String> getDestinations() {
    return destinations;
  }

  public void setDestinations(List<String> destinations) {
    this.destinations = destinations;
  }

  public MatrixRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Arbitrary identification string of the request reflected in the meta information.
   * @return id
  **/
  @ApiModelProperty(example = "matrix_request", value = "Arbitrary identification string of the request reflected in the meta information.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MatrixRequest locations(List<List<Double>> locations) {
    this.locations = locations;
    return this;
  }

  public MatrixRequest addLocationsItem(List<Double> locationsItem) {
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * List of comma separated lists of &#x60;longitude,latitude&#x60; coordinates.
   * @return locations
  **/
  @ApiModelProperty(example = "[[9.70093,48.477473],[9.207916,49.153868],[37.573242,55.801281],[115.663757,38.106467]]", required = true, value = "List of comma separated lists of `longitude,latitude` coordinates.")
  public List<List<Double>> getLocations() {
    return locations;
  }

  public void setLocations(List<List<Double>> locations) {
    this.locations = locations;
  }

  public MatrixRequest metrics(List<MetricsEnum> metrics) {
    this.metrics = metrics;
    return this;
  }

  public MatrixRequest addMetricsItem(MetricsEnum metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

   /**
   * Specifies a list of returned metrics. * &#x60;distance&#x60; - Returns distance matrix for specified points in defined &#x60;units&#x60;. * &#x60;duration&#x60; - Returns duration matrix for specified points in **seconds**. CUSTOM_KEYS:{&#39;apiDefault&#39;:&#39;duration&#39;}
   * @return metrics
  **/
  @ApiModelProperty(value = "Specifies a list of returned metrics. * `distance` - Returns distance matrix for specified points in defined `units`. * `duration` - Returns duration matrix for specified points in **seconds**. CUSTOM_KEYS:{'apiDefault':'duration'}")
  public List<MetricsEnum> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<MetricsEnum> metrics) {
    this.metrics = metrics;
  }

  public MatrixRequest resolveLocations(Boolean resolveLocations) {
    this.resolveLocations = resolveLocations;
    return this;
  }

   /**
   * Specifies whether given locations are resolved or not. If the parameter value set to &#x60;true&#x60;, every element in &#x60;destinations&#x60; and &#x60;sources&#x60; will contain a &#x60;name&#x60; element that identifies the name of the closest street. Default is &#x60;false&#x60;. CUSTOM_KEYS:{&#39;apiDefault&#39;:false}
   * @return resolveLocations
  **/
  @ApiModelProperty(value = "Specifies whether given locations are resolved or not. If the parameter value set to `true`, every element in `destinations` and `sources` will contain a `name` element that identifies the name of the closest street. Default is `false`. CUSTOM_KEYS:{'apiDefault':false}")
  public Boolean isResolveLocations() {
    return resolveLocations;
  }

  public void setResolveLocations(Boolean resolveLocations) {
    this.resolveLocations = resolveLocations;
  }

  public MatrixRequest sources(List<String> sources) {
    this.sources = sources;
    return this;
  }

  public MatrixRequest addSourcesItem(String sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * A list of indices that refers to the list of locations (starting with &#x60;0&#x60;). &#x60;{index_1},{index_2}[,{index_N} ...]&#x60; or &#x60;all&#x60; (default). example &#x60;[0,3]&#x60; for the first and fourth locations CUSTOM_KEYS:{&#39;apiDefault&#39;:[&#39;all&#39;]}
   * @return sources
  **/
  @ApiModelProperty(value = "A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). example `[0,3]` for the first and fourth locations CUSTOM_KEYS:{'apiDefault':['all']}")
  public List<String> getSources() {
    return sources;
  }

  public void setSources(List<String> sources) {
    this.sources = sources;
  }

  public MatrixRequest units(UnitsEnum units) {
    this.units = units;
    return this;
  }

   /**
   * Specifies the distance unit. Default: m. CUSTOM_KEYS:{&#39;apiDefault&#39;:&#39;m&#39;,&#39;validWhen&#39;:{&#39;ref&#39;:&#39;metrics&#39;,&#39;value&#39;:&#39;distance&#39;}&#x60;}
   * @return units
  **/
  @ApiModelProperty(value = "Specifies the distance unit. Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'metrics','value':'distance'}`}")
  public UnitsEnum getUnits() {
    return units;
  }

  public void setUnits(UnitsEnum units) {
    this.units = units;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatrixRequest matrixRequest = (MatrixRequest) o;
    return Objects.equals(this.destinations, matrixRequest.destinations) &&
        Objects.equals(this.id, matrixRequest.id) &&
        Objects.equals(this.locations, matrixRequest.locations) &&
        Objects.equals(this.metrics, matrixRequest.metrics) &&
        Objects.equals(this.resolveLocations, matrixRequest.resolveLocations) &&
        Objects.equals(this.sources, matrixRequest.sources) &&
        Objects.equals(this.units, matrixRequest.units);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinations, id, locations, metrics, resolveLocations, sources, units);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatrixRequest {\n");
    
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    resolveLocations: ").append(toIndentedString(resolveLocations)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

