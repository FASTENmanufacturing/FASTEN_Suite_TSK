/*
 * OpenRouteService
 * This is the openrouteservice API V2 documentation for ORS Core-Version `5.0.0`. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor.swagger.io/).
 *
 * OpenAPI spec version: 5.0.0
 * Contact: info@openrouteservice.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ors.direction.operational.client.api;

import org.ors.direction.client.invoker.ApiException;
import org.ors.direction.client.model.GeoJSONRouteResponse1;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DirectionsApi
 */
//@Ignore
public class DirectionsApiTest {

    private final DirectionsApi api = new DirectionsApi();

    
    /**
     * Directions Service (GET)
     *
     * Get a basic route between two points with the profile provided. Returned response is in GeoJSON format. This method does not accept any request body or parameters other than profile, start coordinate, and end coordinate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSimpleGeoJsonRouteUsingGETTest() throws ApiException {
        String profile = "driving-car";
        String start = "-49.249048,-16.715001";//lon,lat
        String end = "-49.281621,-16.698806";
        GeoJSONRouteResponse1 response = api.getSimpleGeoJsonRouteUsingGET(end, profile, start);
        Map features = (Map)response.getFeatures().get(0);
        Map properties = (Map) ((Map) features).get("properties");
        Map summary  = (Map) ((Map) properties).get("summary");
        Double distance  = (Double) ((Map) summary).get("distance");//m
        Double duration  = (Double) ((Map) summary).get("duration");//seconds
        System.out.println(distance +" in meters");
        System.out.println(duration + " in seconds");
        // TODO: test validations
    }
    
}
