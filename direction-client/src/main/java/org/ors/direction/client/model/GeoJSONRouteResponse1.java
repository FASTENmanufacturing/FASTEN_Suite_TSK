/*
 * OpenRouteService
 * This is the openrouteservice API V2 documentation for ORS Core-Version `5.0.0`. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor.swagger.io/).
 *
 * OpenAPI spec version: 5.0.0
 * Contact: info@openrouteservice.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ors.direction.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.ors.direction.client.model.RouteResponseInfo;
import java.io.Serializable;

/**
 * GeoJSONRouteResponse1
 */

public class GeoJSONRouteResponse1 implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("bbox")
  private List<Double> bbox = null;

  @SerializedName("features")
  private List<Object> features = null;

  @SerializedName("metadata")
  private RouteResponseInfo metadata = null;

  @SerializedName("type")
  private String type = null;

  public GeoJSONRouteResponse1 bbox(List<Double> bbox) {
    this.bbox = bbox;
    return this;
  }

  public GeoJSONRouteResponse1 addBboxItem(Double bboxItem) {
    if (this.bbox == null) {
      this.bbox = new ArrayList<>();
    }
    this.bbox.add(bboxItem);
    return this;
  }

   /**
   * Bounding box that covers all returned routes
   * @return bbox
  **/
  @ApiModelProperty(example = "[49.414057,8.680894,49.420514,8.690123]", value = "Bounding box that covers all returned routes")
  public List<Double> getBbox() {
    return bbox;
  }

  public void setBbox(List<Double> bbox) {
    this.bbox = bbox;
  }

  public GeoJSONRouteResponse1 features(List<Object> features) {
    this.features = features;
    return this;
  }

  public GeoJSONRouteResponse1 addFeaturesItem(Object featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @ApiModelProperty(value = "")
  public List<Object> getFeatures() {
    return features;
  }

  public void setFeatures(List<Object> features) {
    this.features = features;
  }

  public GeoJSONRouteResponse1 metadata(RouteResponseInfo metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public RouteResponseInfo getMetadata() {
    return metadata;
  }

  public void setMetadata(RouteResponseInfo metadata) {
    this.metadata = metadata;
  }

  public GeoJSONRouteResponse1 type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeoJSONRouteResponse1 geoJSONRouteResponse1 = (GeoJSONRouteResponse1) o;
    return Objects.equals(this.bbox, geoJSONRouteResponse1.bbox) &&
        Objects.equals(this.features, geoJSONRouteResponse1.features) &&
        Objects.equals(this.metadata, geoJSONRouteResponse1.metadata) &&
        Objects.equals(this.type, geoJSONRouteResponse1.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bbox, features, metadata, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeoJSONRouteResponse1 {\n");
    
    sb.append("    bbox: ").append(toIndentedString(bbox)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

