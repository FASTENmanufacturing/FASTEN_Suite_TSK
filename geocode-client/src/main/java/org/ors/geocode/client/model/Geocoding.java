/*
 * Openrouteservice
 * This is the openrouteservice API V1 documentation for ORS Core-Version `5.0.0`
 *
 * OpenAPI spec version: 5.0.0
 * Contact: support@openrouteservice.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ors.geocode.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.ors.geocode.client.model.GeocodingEngine;
import org.ors.geocode.client.model.GeocodingLang;
import java.io.Serializable;

/**
 * AIR Address response metadata information.
 */
@ApiModel(description = "AIR Address response metadata information.")

public class Geocoding implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("version")
  private String version = null;

  @SerializedName("attribution")
  private String attribution = null;

  @SerializedName("query")
  private Object query = null;

  @SerializedName("size")
  private BigDecimal size = null;

  @SerializedName("private")
  private String _private = null;

  @SerializedName("warnings")
  private List<String> warnings = null;

  @SerializedName("lang")
  private GeocodingLang lang = null;

  @SerializedName("engine")
  private GeocodingEngine engine = null;

  @SerializedName("timestamp")
  private Date timestamp = null;

  public Geocoding version(String version) {
    this.version = version;
    return this;
  }

   /**
   * GeoJSON version
   * @return version
  **/
  @ApiModelProperty(value = "GeoJSON version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public Geocoding attribution(String attribution) {
    this.attribution = attribution;
    return this;
  }

   /**
   * attribution info
   * @return attribution
  **/
  @ApiModelProperty(value = "attribution info")
  public String getAttribution() {
    return attribution;
  }

  public void setAttribution(String attribution) {
    this.attribution = attribution;
  }

  public Geocoding query(Object query) {
    this.query = query;
    return this;
  }

   /**
   * query as intepreted by AIR
   * @return query
  **/
  @ApiModelProperty(value = "query as intepreted by AIR")
  public Object getQuery() {
    return query;
  }

  public void setQuery(Object query) {
    this.query = query;
  }

  public Geocoding size(BigDecimal size) {
    this.size = size;
    return this;
  }

   /**
   * Number of features returned
   * @return size
  **/
  @ApiModelProperty(value = "Number of features returned")
  public BigDecimal getSize() {
    return size;
  }

  public void setSize(BigDecimal size) {
    this.size = size;
  }

  public Geocoding _private(String _private) {
    this._private = _private;
    return this;
  }

   /**
   * Get _private
   * @return _private
  **/
  @ApiModelProperty(value = "")
  public String getPrivate() {
    return _private;
  }

  public void setPrivate(String _private) {
    this._private = _private;
  }

  public Geocoding warnings(List<String> warnings) {
    this.warnings = warnings;
    return this;
  }

  public Geocoding addWarningsItem(String warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * list of invalid inputs and general request warnings
   * @return warnings
  **/
  @ApiModelProperty(value = "list of invalid inputs and general request warnings")
  public List<String> getWarnings() {
    return warnings;
  }

  public void setWarnings(List<String> warnings) {
    this.warnings = warnings;
  }

  public Geocoding lang(GeocodingLang lang) {
    this.lang = lang;
    return this;
  }

   /**
   * Get lang
   * @return lang
  **/
  @ApiModelProperty(value = "")
  public GeocodingLang getLang() {
    return lang;
  }

  public void setLang(GeocodingLang lang) {
    this.lang = lang;
  }

  public Geocoding engine(GeocodingEngine engine) {
    this.engine = engine;
    return this;
  }

   /**
   * Get engine
   * @return engine
  **/
  @ApiModelProperty(value = "")
  public GeocodingEngine getEngine() {
    return engine;
  }

  public void setEngine(GeocodingEngine engine) {
    this.engine = engine;
  }

  public Geocoding timestamp(Date timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp when the query was run
   * @return timestamp
  **/
  @ApiModelProperty(value = "Timestamp when the query was run")
  public Date getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Date timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Geocoding geocoding = (Geocoding) o;
    return Objects.equals(this.version, geocoding.version) &&
        Objects.equals(this.attribution, geocoding.attribution) &&
        Objects.equals(this.query, geocoding.query) &&
        Objects.equals(this.size, geocoding.size) &&
        Objects.equals(this._private, geocoding._private) &&
        Objects.equals(this.warnings, geocoding.warnings) &&
        Objects.equals(this.lang, geocoding.lang) &&
        Objects.equals(this.engine, geocoding.engine) &&
        Objects.equals(this.timestamp, geocoding.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, attribution, query, size, _private, warnings, lang, engine, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Geocoding {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    attribution: ").append(toIndentedString(attribution)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    _private: ").append(toIndentedString(_private)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

